{"version":3,"sources":["Inputs.tsx","Types.tsx","school-calendar.tsx","Week.tsx","Month.tsx","Calendar.tsx","generate-calendar.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["UnskipButton","props","react_default","a","createElement","type","className","onClick","action","SkipButton","Inputs","DayOfWeek","Month","SchoolDayType","value","completedDays","onChange","e","actions","setCompletedDays","parseInt","target","requiredDays","setRequiredDays","assembleMonth","month","state","schoolMonth","weeks","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","res","assembleWeek","push","week","err","return","ret","dow","Sunday","Saturday","date","sdType","Weekend","Vacation","skips","idx","getMonth","getDate","Break","School","schoolDayNumber","transformSkips","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","skip","day","dayOfWeekNumbers","Object","keys","map","Number","filter","isNaN","WeekActions","hasActionableDays","days","unskip","values","DayAction","Week","getDay","MonthElement","src_Week","Calendar","months","src_Month","assign","generateCalendar","start","length","result","currentMonth","currentWeek","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","collectMonths","getFullYear","addDays","generateDays","offset","newDate","Date","valueOf","setDate","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calendar","n","setState","newSkips","concat","_loop","console","log","onSkip","bind","onUnskip","schoolCalendar","intState","assembleSchoolCalendar","src_Inputs","src_Calendar","href","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74c610af.chunk.js","sourcesContent":["import React from 'react';\nimport {ActionsProps} from './Types';\n\ntype ButtonProps = {\n  action: () => void\n}\n\nexport function UnskipButton(props: ButtonProps) {\n  return (\n    <button type=\"button\" className=\"btn btn-success\" onClick={props.action}>+</button>\n  )\n}\n\nexport function SkipButton(props: ButtonProps) {\n  return (\n    <button type=\"button\" className=\"btn btn-warning\" onClick={props.action}>-</button>\n  )\n}\n\ntype Props = ActionsProps & {\n  completedDays: number\n  requiredDays: number\n}\n\nfunction Inputs(props: Props) {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Days completed</span>\n          </div>\n          <input className=\"form-control\" type=\"number\" value={props.completedDays} onChange={e => props.actions.setCompletedDays(parseInt(e.target.value))} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"input-group mb-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Days required</span>\n          </div>\n          <input className=\"form-control\" type=\"number\" value={props.requiredDays} onChange={e => props.actions.setRequiredDays(parseInt(e.target.value))} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Inputs;\n","export type AppState = {\n  calendar: Array<CalendarMonth>\n  skips: Array<Skip>\n  requiredDays: number\n  completedDays: number\n}\n\nexport type Skip = {\n  month: Month\n  day: number\n}\n\nexport type CalendarMonth = {\n  month: Month\n  weeks: Array<CalendarWeek>\n}\n\nexport type CalendarWeek = { [dayOfWeek: number]: Date }\n\nexport enum DayOfWeek {\n  Sunday = 0,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday,\n}\n\nexport enum Month {\n  January = 0,\n  February,\n  March,\n  April,\n  May,\n  June,\n  July,\n  August,\n  September,\n  October,\n  November,\n  December\n}\n\nexport type Actions = {\n  skip: (days: Array<Date>) => void\n  unskip: (days: Array<Date>) => void\n  setCompletedDays: (days: number) => void\n  setRequiredDays: (days: number) => void\n}\n\nexport type ActionsProps = {\n  actions: Actions\n}\n","import {AppState, CalendarMonth, CalendarWeek, DayOfWeek, Month, Skip} from './Types'\n\nexport type SchoolCalendar = Array<SchoolMonth>\n\nexport type SchoolMonth = {\n  month: Month\n  weeks: Array<SchoolWeek>\n}\n\nexport enum SchoolDayType {\n  School,\n  Break,    // a day off in the middle of the school year.\n  Vacation, // school year is finished!\n  Weekend\n}\n\nexport type SchoolWeek = { [dayOfWeek: number]: SchoolDay }\n\nexport type SchoolDay = {\n  date: Date\n  sdType: SchoolDayType\n  schoolDayNumber?: number\n}\n\ntype FastSkips = { [dayHash: number]: boolean }\n\ntype InternalState = {\n  skips: FastSkips\n  requiredDays: number\n  completedDays: number\n}\n\nexport function assembleSchoolCalendar(state: AppState): SchoolCalendar {\n  let intState = {\n    skips: transformSkips(state.skips),\n    requiredDays: state.requiredDays,\n    completedDays: state.completedDays\n  }\n  const result = []\n  for (const month of state.calendar) {\n    const res = assembleMonth(month, intState)\n    result.push(res.month)\n    intState = res.state\n  }\n  return result\n}\n\nfunction assembleMonth(month: CalendarMonth, state: InternalState): {month: SchoolMonth, state: InternalState} {\n  const schoolMonth = {month: month.month, weeks: [] as Array<SchoolWeek>}\n  for (const week of month.weeks) {\n    const res = assembleWeek(week, state)\n    schoolMonth.weeks.push(res.week)\n    state = res.state\n  }\n  return {month: schoolMonth, state}\n}\n\nfunction assembleWeek(week: CalendarWeek, state: InternalState): {week: SchoolWeek, state: InternalState} {\n  const ret: SchoolWeek = {}\n  for (const dow in week) {\n    if (parseInt(dow) === DayOfWeek.Sunday || parseInt(dow) === DayOfWeek.Saturday) {\n      ret[dow] = {\n        date: week[dow],\n        sdType: SchoolDayType.Weekend\n      }\n    } else if (state.completedDays >= state.requiredDays) {\n      ret[dow] = {\n        date: week[dow],\n        sdType: SchoolDayType.Vacation\n      }\n    } else if (state.skips[idx(week[dow].getMonth(), week[dow].getDate())]) {\n      ret[dow] = {\n        date: week[dow],\n        sdType: SchoolDayType.Break\n      }\n    } else {\n      ret[dow] = {\n        date: week[dow],\n        sdType: SchoolDayType.School,\n        schoolDayNumber: state.completedDays + 1\n      }\n      state.completedDays++\n    }\n  }\n  return {week: ret, state}\n}\n\nfunction transformSkips(skips: Array<Skip>): FastSkips {\n  const res = {} as FastSkips\n  for (const skip of skips) {\n    res[idx(skip.month, skip.day)] = true\n  }\n  return res\n}\n\nfunction idx(month: number, day: number): number {\n  return month * 40 + day\n}\n","import React from 'react';\nimport {Actions, ActionsProps, DayOfWeek, Month} from './Types';\nimport {SkipButton, UnskipButton} from './Inputs';\nimport {SchoolDay, SchoolDayType, SchoolWeek} from './school-calendar'\n\ntype Props = ActionsProps & {\n  month: Month\n  week: SchoolWeek\n}\n\nconst dayOfWeekNumbers = Object.keys(DayOfWeek).map(dow => Number(dow)).filter(dow => !isNaN(dow))\n\nfunction Week(props: Props) {\n  return (\n    <div className=\"row week\">\n      <WeekActions {...props} />\n      {dayOfWeekNumbers.map(dow => renderDay(props.week[dow as number], props.actions))}\n    </div>\n  )\n}\n\nfunction WeekActions(props: Props) {\n  if (hasActionableDays(props.week)) {\n    return (\n      <div className=\"col-md-2 controls\">\n        <SkipButton action={() => props.actions.skip(days(props.week))} />\n        <UnskipButton action={() => props.actions.unskip(days(props.week))} />\n      </div>\n    )\n  } else {\n    return <div className=\"col-md-2 controls\"></div>\n  }\n}\n\nfunction hasActionableDays(week: SchoolWeek): boolean {\n  for (const dow in week) {\n    const sdType = week[dow].sdType\n    if (sdType === SchoolDayType.School || sdType === SchoolDayType.Break) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction days(week: SchoolWeek): Array<Date> {\n  return Object.values(week).map(day => day.date)\n}\n\nfunction renderDay(day: null | SchoolDay, actions: Actions) {\n  if (day) {\n    return (\n      <div className={\"col-md-1 day \"+ SchoolDayType[day.sdType]}>\n        <p>\n          <span className=\"day-name d-md-none\">{DayOfWeek[day.date.getDay()]} </span>\n          <span className=\"day-date\">{day.date.getDate()} </span>\n          {day.schoolDayNumber !== undefined && <span className=\"day-schooldaynum\">#{day.schoolDayNumber}</span>}\n        </p>\n        <DayAction day={day} actions={actions} />\n      </div>\n    )\n  } else {\n    return <div className=\"col-md-1\"></div>\n  }\n}\n\nfunction DayAction(props: {day: SchoolDay, actions: Actions}) {\n  const {day, actions} = props\n  if (day.sdType === SchoolDayType.School) {\n    return <SkipButton action={() => actions.skip([day.date])} />\n  } else if (day.sdType === SchoolDayType.Break) {\n    return <UnskipButton action={() => actions.unskip([day.date])} />\n  } else {\n    return <div></div>\n  }\n}\n\nexport default Week\n","import React from 'react';\nimport Week from './Week';\nimport {ActionsProps, Month} from './Types';\nimport {SchoolMonth} from './school-calendar';\n\ntype Props = ActionsProps & SchoolMonth\n\nfunction MonthElement(props: Props) {\n  return (\n    <div className=\"month\">\n      <div className=\"row\">\n        <div className=\"col-md-8 month-name\">{Month[props.month]}</div>\n      </div>\n      <div className=\"row day-names d-none d-md-flex\">\n        <div className=\"col-md-1\"></div>\n        <div className=\"col-md-1 day-name\">Sun</div>\n        <div className=\"col-md-1 day-name\">Mon</div>\n        <div className=\"col-md-1 day-name\">Tues</div>\n        <div className=\"col-md-1 day-name\">Weds</div>\n        <div className=\"col-md-1 day-name\">Thur</div>\n        <div className=\"col-md-1 day-name\">Fri</div>\n        <div className=\"col-md-1 day-name\">Sat</div>\n      </div>\n      {props.weeks.map(week => <Week month={props.month} week={week} actions={props.actions} />)}\n    </div>\n  )\n}\n\nexport default MonthElement;\n","import React from 'react';\nimport Month from './Month';\nimport {ActionsProps} from './Types';\nimport {SchoolCalendar} from './school-calendar';\n\ntype Props = ActionsProps & {\n  months: SchoolCalendar\n}\n\nfunction Calendar(props: Props) {\n  return (\n    <div className=\"calendar\">\n      {props.months.map(month =>\n        <Month actions={props.actions} {...month} />\n      )}\n    </div>\n  )\n}\n\nexport default Calendar;\n","import {CalendarMonth, CalendarWeek, DayOfWeek, Month} from './Types';\n\nexport default function generateCalendar(start: Date): Array<CalendarMonth> {\n  const days = generateDays(start)\n  return collectMonths(days)\n}\n\nfunction generateDays(start: Date): Array<Date> {\n  const result = []\n  for (let date = start; date.getFullYear() === start.getFullYear(); date = addDays(date, 1)) {\n    result.push(date)\n  }\n  return result\n}\n\nfunction collectMonths(days: Array<Date>): Array<CalendarMonth> {\n  if (days.length === 0) return []\n  const result: Array<CalendarMonth> = []\n  let currentMonth: null | CalendarMonth = null\n  let currentWeek = {} as CalendarWeek\n  for (const day of days) {\n    let month: Month = day.getMonth()\n    let dow: DayOfWeek = day.getDay()\n    if (currentMonth === null || currentMonth.month !== month) {\n      currentWeek = {}\n      currentMonth = {month, weeks: [currentWeek]}\n      result.push(currentMonth)\n    } else if (dow === DayOfWeek.Sunday) {\n      currentWeek = {}\n      currentMonth.weeks.push(currentWeek)\n    }\n    currentWeek[dow] = day\n  }\n  return result\n}\n\nfunction addDays(date: Date, offset: number): Date {\n  const newDate = new Date(date.valueOf())\n  newDate.setDate(date.getDate() + offset)\n  return newDate\n}\n","import React from 'react';\nimport './App.css';\nimport Inputs from './Inputs';\nimport Calendar from './Calendar';\nimport {AppState, Month} from './Types';\nimport generateCalendar from './generate-calendar';\nimport {assembleSchoolCalendar} from './school-calendar';\n\ntype Props = {}\ntype State = AppState\n\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      calendar: generateCalendar(new Date()),\n      skips: [],\n      requiredDays: 180,\n      completedDays: 0\n    };\n  }\n\n  setRequiredDays(n: number) {\n    this.setState({requiredDays: n})\n  }\n\n  setCompletedDays(n: number) {\n    this.setState({completedDays: n})\n  }\n\n  onSkip(days: Array<Date>) {\n    const newSkips = days.map(day => ({\n      month: day.getMonth() as Month,\n      day: day.getDate()\n    }))\n    this.setState({skips: this.state.skips.concat(newSkips)})\n  }\n\n  onUnskip(days: Array<Date>) {\n    let skips = this.state.skips\n    for (const day of days) {\n      skips = skips.filter(skip => skip.month !== day.getMonth() || skip.day !== day.getDate())\n    }\n    this.setState({skips})\n  }\n\n  render() {\n    console.log(this.state.skips)\n    const actions = {\n      skip: this.onSkip.bind(this),\n      unskip: this.onUnskip.bind(this),\n      setCompletedDays: this.setCompletedDays.bind(this),\n      setRequiredDays: this.setRequiredDays.bind(this)\n    }\n\n    const schoolCalendar = assembleSchoolCalendar(this.state)\n\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">School Days</h1>\n          <div className=\"container\">\n            <Inputs completedDays={this.state.completedDays} requiredDays={this.state.requiredDays} actions={actions} />\n          </div>\n        </div>\n\n        <Calendar months={schoolCalendar} actions={actions} />\n\n        <nav className=\"navbar navbar-light bg-light\">\n          <span className=\"navbar-text\">\n            <a href=\"https://github.com/spraints/school-days\">source</a>\n          </span>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    ) ||\n    window.location.hostname.match(\n      /\\.localhost$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'; // https://facebook.github.io/create-react-app/docs/adding-bootstrap\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}